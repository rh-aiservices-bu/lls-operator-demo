# Default values for mcp-weather
replicaCount: 1

image:
  repository: quay.io/rh-aiservices-bu/mcp-weather
  tag: "0.1.0-amd64"
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  # Remove specific UID/GID to let OpenShift assign them
  # fsGroup: 1001

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  # Remove specific UID/GID to let OpenShift assign them
  # runAsUser: 1001
  # runAsGroup: 1001

service:
  type: ClusterIP
  port: 80
  targetPort: 3001
  annotations: {}

route:
  enabled: true
  annotations: {}
  host: ""
  tls:
    enabled: true
    termination: edge
    insecureEdgeTerminationPolicy: Redirect

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: mcp-weather.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    # cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Weather API configuration
weather:
  # API key for weather service (store in secret) - optional for demo mode
  apiKeySecretName: ""
  apiKeySecretKey: "api-key"
  # Default weather service provider
  provider: "openweathermap"  # Options: openweathermap, weatherapi, etc.
  # Demo mode - set to true to run without API key
  demoMode: true

# Environment variables
env:
  MCP_SERVER_PORT: "3001"
  MCP_SERVER_HOST: "0.0.0.0"
  WEATHER_CACHE_TTL: "300"  # 5 minutes

# Network Policies
networkPolicy:
  enabled: true
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: openshift-ingress
      ports:
      - protocol: TCP
        port: 3001
    - from:
      - podSelector:
          matchLabels:
            app.kubernetes.io/name: llama-stack
      ports:
      - protocol: TCP
        port: 3001
  egress:
    # Allow egress to weather API services
    - to: []
      ports:
      - protocol: TCP
        port: 80
      - protocol: TCP
        port: 443

# Pod Disruption Budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1